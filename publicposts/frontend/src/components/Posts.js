import React, {Component} from "react";
import PostService from "./PostService";

import "../styles/Post.css";

const postService = new PostService(); //–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞

export default class Posts extends Component {
    
    // –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä 
    constructor(props) {
        super(props)
        this.state = {
            data: [],      // –í –ø–æ–ª–µ data –±—É–¥–µ–º –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –ø–æ—Å—Ç—ã.
            inputValue: ''  // –í –ø–æ–ª–µ inputValue –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ—Å—Ç.
        }
    
        this.handleChange = this.handleChange.bind(this);
        this.handleSubmit = this.handleSubmit.bind(this);
    }

    //—Å–æ–±—ã—Ç–∏–µ, –≤—ã–ø–æ–ª–Ω—è—é—â–µ–µ—Å—è, –∫–æ–≥–¥–∞ –∏–∑–º–µ–Ω–∏–ª–∏ –ø–æ–ª–µ –≤–≤–æ–¥–∞.
    handleChange(event) {
        this.setState({ inputValue: event.target.value });
    }

    //—Å–æ–±—ã—Ç–∏–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–ª–∞–≤–∏—à—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞
    // handleSubmit(event) {
    // 	postService.createPost({'text' : this.state.inputValue});
    // 	this.getData()
    //     this.setState({ inputValue: '' })
    // }
    
    handleSubmit(event) {
        // event.preventDefault(); // –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        postService.createPost({ text: this.state.inputValue })
            .then(() => {
                this.getData();
                this.setState({ inputValue: '' });
            })
            .catch((error) => {
            });
    }
    
    // –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞, –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º —Å—Ä–∞–∑—É –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    getData() {
        postService.getPosts().then(result => {
            this.setState({ data: result.data })
            // this.setState({ data: result.results })
            // console.log('data:', result.results)
        })
    }
    
    componentDidMount() {
        this.getData()
        
    }

    //—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–∞–π–∫–∞
    setLike(post) {
        postService.setLikePost(post.id)
        post.likesCount += 1
        this.forceUpdate()
    }

    //—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è delete post
    // deletePost(post) {
    //     postService.deletePost(post.id)
    //     this.forceUpdate()    
    // }

    deletePost(post) {
        postService.deletePost(post.id)
            .then(() => {
                this.getData();
            })
            .catch((error) => {
            });
    }

    // –¶–∏–∫–ª–∏—á–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã, –ø–æ–ø—É—Ç–Ω–æ –¥–æ–±–∞–≤–ª—è—è —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–æ–∫ Like, –ø–µ—Ä–µ–¥–∞–≤–∞—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç post. –ï—â–µ —Å—Ä–∞–∑—É –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–ø–∏—Å–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –ø–æ –≤–≤–æ–¥—É –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞.
    // –ï—Å–ª–∏ –ø–æ–ª—è –≤–≤–æ–¥–∞ –º–µ–Ω—è–µ—Ç—Å—è, —Å—Ä–∞–∑—É –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–≥–æ inputValue. –ü–æ –Ω–∞–∂–∞—Ç–∏—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º inputValue –≤ —Ñ—É–Ω–∫—Ü–∏—é createPost(). –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –ø–æ—Å—Ç—ã –∑–∞–Ω–æ–≤–æ –∏ —Å—Ç–∞–≤–∏–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø—É—Å—Ç—ã–º.

    render() {
        return (
            <div id="posts" className="messenger-container">
                <div className="message-list">
                    {this.state.data.map((post) => (
                        <div key={post.id} id={"post_" + post.id} className="message-item">
                            <p className="message-text">{post.text}</p>
                            <div className="message-meta">
                                <span className="message-date">{new Date(post.date).toLocaleTimeString()} {new Date(post.date).toLocaleDateString()}</span>
                                {/* new Date(createTime).toLocaleString() */}
                                {/* <span className="message-date">
                                {new Intl.DateTimeFormat('ru-RU', {
                                    year: 'numeric',
                                    month: 'numeric',
                                    day: 'numeric',
                                    hour: 'numeric',
                                    minute: 'numeric',
                                    second: 'numeric',
                                }).format(new Date(post.date))}
                                </span> */}
                                <button className="message-like-btn" onClick={() => this.setLike(post)}>
                                    <i className="fa fa-thumbs-up"></i> ü§ô {post.likesCount}
                                </button>

                            </div>
                            <button className="message-delete-btn" onClick={() => this.deletePost(post)}>
                                    <i className="fa fa-trash"></i> Delete post
                            </button>
                        </div>
                    ))}
                </div>
                <div className="message-input-container">
                    <input
                        type="text"
                        className="message-input"
                        placeholder="Type your message..."
                        onChange={this.handleChange}
                        value={this.state.inputValue}
                    />
                    <button className="send-btn" onClick={this.handleSubmit}>
                        Send
                    </button>
                </div>
            </div>
        );
    }
}